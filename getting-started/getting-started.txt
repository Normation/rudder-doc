= Getting started with Rudder 
:author: A quick practical guide to get started with Rudder.
:date: Install the Rudder Server and Rudder Agent, create and apply your first Rule
:version: v1.0 
:backend: deckjs 
:deckjs_theme: beamer
:deckjs_transition: horizontal-slide 
:pygments: 
:pygments_style: native
:scrollable: 
:data-uri:

// you need http://houqp.github.com/asciidoc-deckjs/ to build this files


== Getting started with Rudder

This is a quick practical guide to get started with Rudder. You will learn how
to achieve these basic tasks:

[incremental="true"]

1. install the Rudder Server,
2. install the Rudder Agent,
3. create your first Rule: create a Group, a Directive and a Rule,
4. make sure the Rule is applied to the managed Node.

To get more deeply in the explanations, please read the full User Documentation.

== Requirements

[incremental="true"]

* Rudder Server

** This guide will describe the installation of the Rudder Server on a Debian
Squeeze, with 1 GB of memory and the 'IP' address +192.168.56.85+.

** On the Rudder Server, you need a compatible Java Runtime Environment to run,
namely the Oracle Java 6 JRE or OpenJDK 7 JRE (OpenJDK 6 is not supported).

* Rudder Agent

** The installation of the Rudder Agent will be performed on a CentOS 5.8, with
384 MB of memory and the 'IP' address +192.168.56.190+.

* Name resolution

** You will also need a proper 'DNS' environment, that allow server and client to
communicate via their hostname. If you don't have the necessary name resolution,
we recommend that you should fill the IP address and hostname in the +/etc/hosts+
file.

== Install the Rudder Server

The recommended way to install Rudder is using the Normation repository, and to
validate its content, you should import the GPG key used to sign it

[source,console]
----
# apt-key adv --recv-keys --keyserver keyserver.ubuntu.com 474A19E8
# echo "deb http://www.rudder-project.org/apt-stable/ squeeze main contrib non-free" > /etc/apt/sources.list.d/rudder.list
# apt-get update
# apt-get install rudder-server-root
----

== Configure the Rudder Server

Once the package has been installed, you have to perform the one-time
configuration by running the post-install script. Two basic pieces of information will be
asked:

[quote, Hostname of the Rudder server root, which can be used by the client Nodes to reach the server.]
____
Hostname: +rudder-server+
____


[quote, A list of IP networks that you will authorize to connect to the server.]
____
Allowed Networks: +192.168.56.0/24+
____

ifdef::backend-deckjs[<<<]

The script will also ask if you want to add sample data, which is not something
that we want for a real usage.

----
# /opt/rudder/bin/rudder-init.sh

Welcome to the Rudder initialization script

This script will configure your Rudder root server.
It can be run as many times as you want.

Please enter the fully qualified domain name that will be used to access the web
interface of the Rudder server (i.e rudder.example.com): rudder-server

Enter network allowed to access server (i.e 192.168.0.0/24): 192.168.56.0/24
192.168.56.0/24
Network(s) added:
192.168.56.0/24
Add more networks? (yes/no) no
no

Do you want to add sample data (for demos)? (yes/no)
no
----

//.Post install script
//image::http://www.rudder-project.org/images/getting-started/post-install.png[]

== Install the Client

[incremental="true"]

* As with the server, the recommended way to install the agent on the client is to
use the Normation repository.
+
[source,sh]
----
# echo "[Rudder_2.4]
name=Rudder 2.4 Repository
baseurl=http://www.rudder-project.org/rpm-stable/RHEL_5/
gpgcheck=0
" > /etc/yum.repos.d/rudder.repo
# yum install rudder-agent
----

* Then you need to configure on which Server the Client should connect to, by
creating a file on the system
+
[source,console]
----
# echo 'rudder-server' > /var/rudder/cfengine-community/policy_server.dat
# chkconfig rudder-agent on
# service rudder-agent start
----

== Manage your system with Rudder

With your web browser, go to the Login page of the Rudder Server - in this case
http://rudder-server. You'll arrive on the login page. The default credentials
are : jon.doe / secret

.Login page
image::http://www.rudder-project.org/images/getting-started/login.png[]

== Create a Group

We will create our first group: a group that will contain all the Linux nodes.

A Group is a set of managed Node, based on hardware and/or software criteria.

We don't have any nodes accepted yet within Rudder, but we'll show how it is not a
problem and how Rudder can automatically adapt to the Nodes.

[incremental="true"]

. Click on the "Node Management" menu.

. Select the "Groups" subsection in the left menu.

. You'll arrive on the Group management page. 

ifdef::backend-deckjs[<<<]

[incremental="true"]

. Click on the "Create a new item" button.

. Select to create a Group, that will have the name "All linuxes". 

. Please make sure that the Group type is "Dynamic", so that any new managed
  node will be included in this group, if it matches the search criteria. 

. The group is created with a default search returning all Linux nodes, which is
  exactly what we need.

.Group creation
image::http://www.rudder-project.org/images/getting-started/group.png[]

== Create a Directive

Once this Group is created, we can create our first Directive.

Directives are parametrized Techniques, they define the actions to perform on
the Nodes.

[incremental="true"]

* Click on 'Configuration Policy' on the top menu.

* Select the 'Directives' subsection in the left menu.

* For this guide, we will define a Message of the Day, to tell people who log in
  the managed node that the node is managed by Rudder.

** We can use open the branches of the tre to figure out where the 'MOTD
Configuration Technique reside'.

** We can also use the search field.

* In the Search section of the tree, type +motd+ to search the MOTD Technique.
* Select the 'MOTD Configuration Technique'.
* Click on the 'Create a new directive based on technique MOTD configuration'.


.Directive creation
image::http://www.rudder-project.org/images/getting-started/directive1.png[]

ifdef::backend-deckjs[<<<]

* Type in a name and a short description, and click on "Configure"

.Define name and description of Directive

image::http://www.rudder-project.org/images/getting-started/motd2.png[]

ifdef::backend-deckjs[<<<]

* The screen will scroll to the directive creation, where you can fill in the text
you want to be displayed on the node.

* Once you are satisfied with the content and the text, you can save it by
clicking on the "Save" button. 

.Definition of the MOTD Directive

image::http://www.rudder-project.org/images/getting-started/motd3.png[]


== Create a rule

You need to apply a Directive to a Group to activate it: that's the role of a
Rule.

A Rule is the glue that binds a Directive to one or several Groups.

[incremental="true"]

* Select the Rules subsection in the left menu,

* Click on "Add a new rule"

* As for the Directive, you have to define a Name for this Rule, and you can add a
description.

.Create a rule

image::http://www.rudder-project.org/images/getting-started/rule1.png[]

ifdef::backend-deckjs[<<<]

Then you select the Directives and the Groups that need to be bound together.

.Define the Rule

image::http://www.rudder-project.org/images/getting-started/rule2.png[]

== Accept a Node within Rudder

Since so far no nodes have been accepted within Rudder, nothing happens yet.
Indeed, before being able to manage a Node, you need to accept it within Rudder

[incremental="true"]

* Click on the Node Management section,
* Go to the Accept new node subsection. 
* On this screen, the list of all pending nodes is displayed. A pending node is
  a node on which the Rudder agent has been installed, but the node hasn't been
  accepted yet within Rudder.

.List of pending nodes
image::http://www.rudder-project.org/images/getting-started/accept_new_node.png[]

* On this screen, you can see the full inventory of the pending node as well, and
the list of Directives that will be applied on this Node when accepted.

ifdef::backend-deckjs[<<<]

* To accept a node, you check it on the list, and click "Accept into Rudder", and
confirm that you indeed want to accept it by clicking Accept into the popup.

.Accept a node
image::http://www.rudder-project.org/images/getting-started/accept2.png[]

ifdef::backend-deckjs[<<<]

[incremental="true"]

* Now, the managed node is managed by Rudder.

* In the next 5 minutes it should fetch its policies from the Rudder server, and
thus update its Message of the Day. You'll be able to ssh the node to check that
the configuration is indeed applied
+
.MOTD updated by Rudder Compliance
image::http://www.rudder-project.org/images/getting-started/ssh.png[]

== Compliance of the MOTD rule

You'll be able to see the compliance of the Rule, to check that it is indeed
conform, after Rudder has updated the MOTD, in the Configuration Policy section

Right after accepting the Node, you should have "Applying", meaning that Rudder
server is waiting for the agent to fetch its policies and apply them, then you
should have 0%, because the Node was not compliance, but is now Corrected (the
status is Repaired). After a while (about 10 minutes), you should have a 100%
compliance, as the configuration will be correct 

.Compliance of the MOTD rule
image::http://www.rudder-project.org/images/getting-started/compliance.png[]

== After the first rule

Now you have learned the basic principles for the management of your nodes with
Rudder. It's time to investigate more deeply in the two main tools you will use
for a complete deployment: setting up Groups and setting up Directives. You will
also learn to examinate the compliance of the applied Rules and the other
informative and log screens offered by Rudder. 
