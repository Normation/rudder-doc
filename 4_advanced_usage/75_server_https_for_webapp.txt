[[https-for-webapp, HTTP/S for Rudder web application]]
=== HTTP/S support

HTTP/S support is desirable in most applications, especially environments
hosting sensitive information.

Currently, Rudder does not enable HTTP/S by default, but adding HTTP/S to
the web interface is relatively trivial.

To do so, please replace the content of these files with the following,
inside the Apache virtual host directory ( /etc/apache2/sites-enabled in
Debian, /etc/apache2/vhost.d in SuSE and /etc/httpd/conf.d on RHEL):

- rudder-default

----

<VirtualHost *:80>
    ServerAdmin webmaster@localhost
    ServerName  rudder

    RewriteEngine On

    RewriteCond %{REQUEST_URI} !^/uuid
    RewriteCond %{REQUEST_URI} !^/inventories/?
    RewriteCond %{REQUEST_URI} !^/inventory-updates/?
    RewriteCond %{REQUEST_URI} !^/api/?

    RewriteRule  ^/(.*)$  https://%{SERVER_NAME}/$1 [R]

    DocumentRoot /var/www

    # Expose the server UUID through http
    Alias /uuid /opt/rudder/etc/uuid.hive
    <Directory /opt/rudder/etc>
        Order deny,allow
        Allow from all
    </Directory>

    # WebDAV share to receive inventories
    Alias /inventories /var/rudder/inventories/incoming
    <Directory /var/rudder/inventories/incoming>
        DAV on 
        AuthName "WebDAV Storage" 
        AuthType Basic
        AuthUserFile /opt/rudder/etc/htpasswd-webdav-initial
        Require valid-user
        Order deny,allow
        # This file is automatically generated according to
        # the hosts allowed by rudder.
        Include /opt/rudder/etc/rudder-networks.conf
        <LimitExcept PUT>
            Order allow,deny
            Deny from all
        </LimitExcept>
    </Directory>

    # WebDAV share to receive inventories
    Alias /inventory-updates /var/rudder/inventories/accepted-nodes-updates
    <Directory /var/rudder/inventories/accepted-nodes-updates>
        DAV on 
        AuthName "WebDAV Storage" 
        AuthType Basic
        AuthUserFile /opt/rudder/etc/htpasswd-webdav
        Require valid-user
        Order deny,allow
        # This file is automatically generated according to
        # the hosts allowed by rudder.
        Include /opt/rudder/etc/rudder-networks.conf
        <LimitExcept PUT>
            Order allow,deny
            Deny from all
        </LimitExcept>
    </Directory>

    # NO access to the API unless you are localhost
    <Location /rudder/api>
        Order deny,allow
        Deny from all
        Allow from localhost
    </Location>

    # Logs
    ErrorLog /var/log/rudder/apache2/error.log
    LogLevel warn
    CustomLog /var/log/rudder/apache2/access.log combined

</VirtualHost>

----

- rudder-default-ssl

----

<IfModule mod_ssl.c>
<VirtualHost _default_:443>

    ServerAdmin webmaster@localhost
    ServerName  rudder

    DocumentRoot /var/www

    # Rudder webapp
    RewriteEngine on
    RewriteRule   ^/$  /rudder [R]

    ProxyPass         "/rudder" "http://localhost:8080/rudder" 
    ProxyPassReverse  "/rudder" "http://localhost:8080/rudder" 
    ProxyRequests     Off

    # Local reverse proxy authorization override
    # Most unix distribution deny proxy by default (ie /etc/apache2/mods-enabled/proxy.conf in Ubuntu)
    <Proxy http://localhost:8080/rudder*>
        Order deny,allow
        Allow from all
    </Proxy>

    # Nice loading page if the Java server is not ready
    ErrorDocument 503 /opt/rudder/share/load-page/rudder-loading.html

    # Enforce permissive access to the load page directory
    <Directory /opt/rudder/share/load-page>
        Order deny,allow
        Allow From all
    </Directory>

    # Expose the server UUID through http
    Alias /uuid /opt/rudder/etc/uuid.hive
    <Directory /opt/rudder/etc>
        Order deny,allow
        Allow from all
    </Directory>

        # NO access to the API unless you are localhost
    <Location /rudder/api>
        Order deny,allow
        Deny from all
        Allow from localhost
    </Location>

    # Logs
    ErrorLog /var/log/rudder/apache2/error.log
    ErrorLog ${APACHE_LOG_DIR}/error.log

    # Possible values include: debug, info, notice, warn, error, crit,
    # alert, emerg.
    LogLevel warn

    CustomLog /var/log/rudder/apache2/access.log combined

    #   SSL Engine Switch:
    SSLEngine on

    SSLCertificateFile      /etc/ssl/certs/server.crt
    SSLCertificateKeyFile   /etc/ssl/private/server.key
    # SSLCertificateChainFile    /etc/ssl/certs/GandiStandardSSLCA.pem

    <FilesMatch "\.(cgi|shtml|phtml|php)$">
        SSLOptions +StdEnvVars
    </FilesMatch>
    <Directory /usr/lib/cgi-bin>
        SSLOptions +StdEnvVars
    </Directory>

    BrowserMatch "MSIE [2-6]" \
        nokeepalive ssl-unclean-shutdown \
        downgrade-1.0 force-response-1.0
    # MSIE 7 and newer should be able to use keepalive
    BrowserMatch "MSIE [17-9]" ssl-unclean-shutdown

</VirtualHost>
</IfModule>

----

You will have to make sure that the SSL module for Apache is enabled using
either "a2enmod ssl" on Debian or adding the Debian module to /etc/sysconfig/apache2
on SLES based systems.

Once you are done, you will need to restart apache to apply the changes:

----

#Â SLES and Debian
/etc/init.d/apache2 restart
# RHEL
/etc/init.d/httpd restart

----

[TIP]

====

Work is in progress in the Rudder development branch to integrate HTTP/S
by default in Rudder. This procedure will then not be needed anymore.

====
